version: '3.7'

services:
  prometheus:
    image: prom/prometheus:v2.42.0
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
      - source: prometheus_alert_rules
        target: /etc/prometheus/alert.rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=http://prometheus.xyz.com'
    ports:
      - "9090:9090"
    volumes:
      - /mnt/prometheus-data:/prometheus
    deploy:
      placement:
        constraints:
          - "node.labels.central_log==yes"
    logging:
      driver: "json-file"
      options:
        max-size: 20m
        max-file: 5
        compress: "true"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
  alertmanager:
    image: prom/alertmanager:v0.25.0
    configs:
      - source: alertmanager_config
        target: /etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    volumes:
      - /mnt/alertmanager-data:/alertmanager
    deploy:
      placement:
        constraints:
          - "node.labels.central_log==yes"
    logging:
      driver: "json-file"
      options:
        max-size: 20m
        max-file: 5
        compress: "true"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
  node-exporter:
    image: prom/node-exporter:v1.5.0
    volumes:
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /proc:/host/proc:ro
      - /etc/hostname:/etc/nodename
    configs:
      - source: node_exporter_entrypoint 
        target: /docker-entrypoint.sh
    deploy:
      mode: global
    environment:
      - NODE_ID={{.Node.ID}}
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/home/'
      - '--collector.meminfo_numa'
      - '--no-collector.ipvs'
    entrypoint:
       - /bin/sh
       - /docker-entrypoint.sh 
    logging:
      driver: "json-file"
      options:
        max-size: 20m
        max-file: 5
        compress: "true"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.39.3
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - --docker_only
      - --housekeeping_interval=5s
      - --disable_metrics=disk,diskIO,tcp,udp,percpu,sched,process
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: 20m
        max-file: 5
        compress: "true"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
  dcgm-exporter:
    image: nvcr.io/nvidia/k8s/dcgm-exporter:3.1.8-3.1.5-ubuntu20.04
    deploy:
      mode: global
      placement:
        constraints:
          - "node.labels.kind==gpu-worker-local"
    command:
      - '--'
    logging:
      driver: "json-file"
      options:
        max-size: 20m
        max-file: 5
        compress: "true"
        labels: "com.docker.swarm.node.id,com.docker.swarm.service.name"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

configs:
  prometheus_config:
    file: $PWD/prometheus-config/prometheus.yml
  prometheus_alert_rules:
    file: $PWD/prometheus-config/alert.rules
  alertmanager_config:
    file: $PWD/alertmanager-config/alertmanager.yml
  node_exporter_entrypoint:
    file: $PWD/node-exporter-config/docker-entrypoint.sh
