user  nginx;
worker_processes  auto;
worker_rlimit_nofile 100000;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
	multi_accept on;
	accept_mutex on;
	worker_connections 16384;
}

http {
	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;
	log_format main '$http_host ' '$remote_addr [$time_local] ' '"$request" $status $body_bytes_sent ' '"$http_referer" "$http_user_agent" ' '$request_time ' '$upstream_response_time ' 'upstream: $upstream_addr';

	access_log  /var/log/nginx/access.log  main;

	open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
	include /etc/nginx/conf.d/*.conf;
	sendfile            on;
	tcp_nopush          on;
	tcp_nodelay         on;
	server_tokens       off;
	gzip on;
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;
	server_name_in_redirect off;
	server_names_hash_bucket_size 512;
	proxy_buffering     on;
	proxy_buffer_size          256k;
	proxy_buffers              64 256k;
	proxy_busy_buffers_size    256k;
	proxy_temp_file_write_size 2048k;
	proxy_max_temp_file_size    1256m;
	proxy_headers_hash_max_size 2048;
	proxy_headers_hash_bucket_size 1024;
	client_body_buffer_size  512k;
	client_header_buffer_size 512;
	client_max_body_size 64M;
	large_client_header_buffers 64 512k;

	proxy_redirect off;
	proxy_set_header    X-NginX-Proxy true;
	proxy_set_header    Host $host;
	proxy_set_header    X-Real-IP  $remote_addr;
	proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header    X-Forwarded-Proto   $scheme;
	proxy_set_header    X-Forwarded-Host $host;
	proxy_set_header    X-Forwarded-Server $host;
	proxy_pass_header   Set-Cookie;
	proxy_pass_header   X-CSRF-TOKEN;
	proxy_pass_header   X-AUTH-TOKEN;
	proxy_hide_header   X-Powered-By;
	proxy_hide_header   X-AspNet-Version;
	reset_timedout_connection on;
	proxy_read_timeout  30s;
	proxy_send_timeout  30s;
	proxy_connect_timeout 30s;
	keepalive_timeout   30s;
	keepalive_requests  1000;
	send_timeout 30s;
	client_body_timeout 30s;
	client_header_timeout 30s;

	# map $limit $limit_key {
	# 	0 "";
	# 	1 $binary_remote_addr;
	# }

	# limit_req_zone $limit_key zone=RateLimit:100m rate=250r/s;

	set_real_ip_from 127.0.0.1;
	real_ip_header    X-Forwarded-For;
	real_ip_recursive on;
	# proxy_cache_path /var/www/nginx/cache/tmp levels=1:2 
    #                 keys_zone=s3_cache:10m 
    #                 max_size=500m 
    #                 inactive=60m
    #                 use_temp_path=off;
    
    server {
        listen 8080;

        location /static/ {
            alias /usr/share/nginx/html/;
        }

        location /bucket-name/ {
            proxy_http_version     1.1;
            proxy_set_header       Connection "";
            proxy_set_header       Authorization '';
            proxy_set_header       Host bucket-name.s3.amazonaws.com;
            proxy_hide_header      x-amz-id-2;
            proxy_hide_header      x-amz-request-id;
            proxy_hide_header      x-amz-meta-server-side-encryption;
            proxy_hide_header      x-amz-server-side-encryption;
            proxy_hide_header      Set-Cookie;
            proxy_ignore_headers   Set-Cookie;
            proxy_intercept_errors on;
            add_header             Cache-Control max-age=31536000;
            proxy_pass             http://bucket-name.s3.amazonaws.com/;
        }
        
    }	

	proxy_cache_path /tmp/cache_auth levels=1:2 keys_zone=auth_cache:10m max_size=128m inactive=10m use_temp_path=off;

	# proxy to a static site with JWT token verified on another API
	server {
        listen 8081;
        include /etc/nginx/mime.types;
        location / {
            set $http_authorization "Bearer ${arg_jwt}";
            auth_request /verify-token;
            error_page 403 = /login;
            error_page 404 = /404.html;
            root /opt/static-site/html;
            index index.html;
        }
        location = /404.html {
            root /opt/static-site/html;
        }
        location /verify-token {
            internal;
            proxy_cache             auth_cache;
            proxy_cache_key         "$scheme$host$remote_addr"; # hosted IP and client IP
            proxy_cache_valid       200 10m;
            proxy_pass http://backend.com:8000/verify-token;
            proxy_pass_request_body off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Authorization $http_authorization; 
        }
        location /login {
            proxy_pass http://backend.com:8000/login-site;
        }
    }

	# proxy to a NoVNC site with JWT token verified on another API
    server {
        listen 8080;
        location / {
            set $http_authorization "Bearer ${arg_jwt}";
            auth_request /eureka-verify-token;
            error_page 403 = /login;
			# Need these settings for websocket at NoVNC
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-User $remote_user;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass http://localhost:8541/;
        }
        location /verify-token {
            internal;
            proxy_cache             auth_cache;
            proxy_cache_key         "$scheme$host$remote_addr"; # hosted IP and client IP
            proxy_cache_valid       200 10m;
            proxy_pass http://backend.com:8000/verify-token;
            proxy_pass_request_body off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Authorization $http_authorization; 
        }
        location /login {
            proxy_pass http://backend.com:8000/login-site;
        }
    }
}